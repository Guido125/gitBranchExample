{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14300\viewh10960\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs28 \cf0 Sup :o\
\
Here are some real life examples. You typically are rushed, and there's pressure to get something out. This however shouldn't affect your git framework. After developing good habits, it costs you 0 time to structure your git accordingly.\
\
Don't just read this, and then browse the answers. That defeats the entire point. Give it your best effort, and only then look at the answers. At that point you can still try looking at just the written answer and then do all the code yourself.\
\
So here's the situation you're probably all too familiar with:\
\
Problem #1:\
You're asked to release a version directly on to prod without testing. What do you do?\
\
Problem #2:\
After pushing to prod, it turns out feature-uberAmazingThing is broken. What are your options if:\
\
* You just need to get anything working?\
* If there's time to do a QA cycle?\
* If there is no time for a QA cycle (critical bug) but the bug has an easy fix?\
* If the bug fix takes awhile?\
\
Problem #3:\
There's a feature that wasn't ready and was breaking things on the develop branch. What changes do you need to make to the develop branch 
\i and the feature branch
\i0 ? (Hint: the feature branch will have to be merged back into develop on completion)}